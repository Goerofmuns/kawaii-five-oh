#!/bin/bash
# Kawaiify
# macOS theming script

# settings
case "${@: -1}" in
    blue)
        HIDE_BAR=1
        DARK_MODE=1
        WALLS=(~/wall/qt/1487725005896.png)
        TERMINAL_PROFILE=Blue
        NEOFETCH_IMAGE=~/Pictures/animu/madoka_magica/stern-homura.jpg
        ;;

    pink)
        HIDE_BAR=1
        DARK_MODE=0
        WALLS=(~/wall/qt/1487717283179.png ~/wall/tol/1490841209857.png)
        TERMINAL_PROFILE=Light
#        NEOFETCH_IMAGE=/Users/tom/wall/qt/1487807462131.jpg
        NEOFETCH_IMAGE=~/Pictures/animu/madoka_magica/madoka.png 
        ;;

    tol)
        HIDE_BAR=1
        DARK_MODE=1
        WALLS=(~/wall/meguca/Unknown.png ~/wall/tol/1489613589934.jpg)
        TERMINAL_PROFILE=ReddyBrown
        NEOFETCH_IMAGE=~/Pictures/animu/2hu/1490842994158_tr.png
        ;;

    dark)
        HIDE_BAR=0
        DARK_MODE=1
        WALLS=(~/wall/qt/1487724950229.png ~/wall/tol/wash.jpg)
        TERMINAL_PROFILE=Dark
        NEOFETCH_IMAGE=~/wall/space/laika+gagarin.jpg 
        ;;

    *)
        # ask for a flag and exit, this MASSIVELY helps when debugging
        echo Invalid Theme
        exit 1
esac

# theme lock, for other programs to use
echo "${@: -1}" > ~/.kawaiify/theme.lock

# Bar hiding for ａｅｓｔｈｅｔｉｃ
if [ $HIDE_BAR != $(defaults read NSGlobalDomain _HIHideMenuBar) ] ; then
    osascript -e '
    tell application "System Preferences"
       reveal pane "com.apple.preference.general"
    end tell
    delay 0.5
    tell application "System Events" to tell process "System Preferences"
       click checkbox "Automatically hide and show the menu bar" of window "General"
    end tell
    delay 0.5
    tell application "System Preferences"
       quit
    end tell'
fi

# dark mode
#if [ $DARK_MODE = 0 ] ; then
#    dark-mode off
#elif [ $DARK_MODE = 1 ] ; then
#    dark-mode on
#fi

if [ $DARK_MODE = 0 ] ; then
    osascript -e '
    tell application "System Events"
    	 tell appearance preferences
    	      set dark mode to false
  	 end tell
    end tell'
elif [ $DARK_MODE = 1 ] ; then
    osascript -e '
    tell application "System Events"
    	 tell appearance preferences
    	      set dark mode to true
  	 end tell
    end tell'
fi


# wallpaper
~/code/kawaiify/wall.py ${WALLS[@]}

# set iterm2 current profile and default
TIMES=$(/usr/libexec/PlistBuddy -c "print :New\ Bookmarks" ~/.kawaiify/com.googlecode.iterm2.plist | grep -E "^\s{4}Dict\s\{" | wc -l)
TIMES=$((TIMES-1))
for i in `seq 0 $TIMES`; do
    PROF_NAME=$(/usr/libexec/PlistBuddy -c "print :New\ Bookmarks:$i:Name" ~/.kawaiify/com.googlecode.iterm2.plist)
    if [ $PROF_NAME == $TERMINAL_PROFILE ] ; then
        PROF_GUID=$(/usr/libexec/PlistBuddy -c "print :New\ Bookmarks:$i:Guid" ~/.kawaiify/com.googlecode.iterm2.plist)
        /usr/libexec/PlistBuddy -c "set :Default\ Bookmark\ Guid $PROF_GUID" ~/.kawaiify/com.googlecode.iterm2.plist
    fi
done

for term in `ls /dev/ttys* | egrep '\/dev\/ttys\d{3}'`; do
    echo -e "\033]50;SetProfile=$TERMINAL_PROFILE\a" > $term
done

# do neofetch?
while getopts ":n" opt; do
    case $opt in
        n)
            neofetch --iterm2 "$NEOFETCH_IMAGE"
            ;;
        \?)
            echo "Invalid option: -$OPTARG" >&2
            ;;
    esac
done
